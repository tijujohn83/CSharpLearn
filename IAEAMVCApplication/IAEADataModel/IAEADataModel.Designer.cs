//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("IAEADatabaseModel", "FK_Rent_Boat", "Boat", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(IAEADataModel.Boat), "Rent", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(IAEADataModel.Rent), true)]
[assembly: EdmRelationshipAttribute("IAEADatabaseModel", "FK_Rent_Customer", "Customer", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(IAEADataModel.Customer), "Rent", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(IAEADataModel.Rent), true)]

#endregion

namespace IAEADataModel
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class IAEADatabaseEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new IAEADatabaseEntities object using the connection string found in the 'IAEADatabaseEntities' section of the application configuration file.
        /// </summary>
        public IAEADatabaseEntities() : base("name=IAEADatabaseEntities", "IAEADatabaseEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new IAEADatabaseEntities object.
        /// </summary>
        public IAEADatabaseEntities(string connectionString) : base(connectionString, "IAEADatabaseEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new IAEADatabaseEntities object.
        /// </summary>
        public IAEADatabaseEntities(EntityConnection connection) : base(connection, "IAEADatabaseEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Boat> Boats
        {
            get
            {
                if ((_Boats == null))
                {
                    _Boats = base.CreateObjectSet<Boat>("Boats");
                }
                return _Boats;
            }
        }
        private ObjectSet<Boat> _Boats;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Customer> Customers
        {
            get
            {
                if ((_Customers == null))
                {
                    _Customers = base.CreateObjectSet<Customer>("Customers");
                }
                return _Customers;
            }
        }
        private ObjectSet<Customer> _Customers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Rent> Rents
        {
            get
            {
                if ((_Rents == null))
                {
                    _Rents = base.CreateObjectSet<Rent>("Rents");
                }
                return _Rents;
            }
        }
        private ObjectSet<Rent> _Rents;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Boats EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBoats(Boat boat)
        {
            base.AddObject("Boats", boat);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Customers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCustomers(Customer customer)
        {
            base.AddObject("Customers", customer);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Rents EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRents(Rent rent)
        {
            base.AddObject("Rents", rent);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="IAEADatabaseModel", Name="Boat")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Boat : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Boat object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="hourlyRate">Initial value of the HourlyRate property.</param>
        /// <param name="isRegistered">Initial value of the IsRegistered property.</param>
        /// <param name="isRented">Initial value of the IsRented property.</param>
        public static Boat CreateBoat(global::System.Int32 id, global::System.String name, global::System.Int32 hourlyRate, global::System.Boolean isRegistered, global::System.Boolean isRented)
        {
            Boat boat = new Boat();
            boat.ID = id;
            boat.Name = name;
            boat.HourlyRate = hourlyRate;
            boat.IsRegistered = isRegistered;
            boat.IsRented = isRented;
            return boat;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 HourlyRate
        {
            get
            {
                return _HourlyRate;
            }
            set
            {
                OnHourlyRateChanging(value);
                ReportPropertyChanging("HourlyRate");
                _HourlyRate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HourlyRate");
                OnHourlyRateChanged();
            }
        }
        private global::System.Int32 _HourlyRate;
        partial void OnHourlyRateChanging(global::System.Int32 value);
        partial void OnHourlyRateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsRegistered
        {
            get
            {
                return _IsRegistered;
            }
            set
            {
                OnIsRegisteredChanging(value);
                ReportPropertyChanging("IsRegistered");
                _IsRegistered = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsRegistered");
                OnIsRegisteredChanged();
            }
        }
        private global::System.Boolean _IsRegistered;
        partial void OnIsRegisteredChanging(global::System.Boolean value);
        partial void OnIsRegisteredChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsRented
        {
            get
            {
                return _IsRented;
            }
            set
            {
                OnIsRentedChanging(value);
                ReportPropertyChanging("IsRented");
                _IsRented = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsRented");
                OnIsRentedChanged();
            }
        }
        private global::System.Boolean _IsRented;
        partial void OnIsRentedChanging(global::System.Boolean value);
        partial void OnIsRentedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IAEADatabaseModel", "FK_Rent_Boat", "Rent")]
        public EntityCollection<Rent> Rents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Rent>("IAEADatabaseModel.FK_Rent_Boat", "Rent");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Rent>("IAEADatabaseModel.FK_Rent_Boat", "Rent", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="IAEADatabaseModel", Name="Customer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Customer : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Customer object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Customer CreateCustomer(global::System.Int32 id, global::System.String name)
        {
            Customer customer = new Customer();
            customer.ID = id;
            customer.Name = name;
            return customer;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IAEADatabaseModel", "FK_Rent_Customer", "Rent")]
        public EntityCollection<Rent> Rents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Rent>("IAEADatabaseModel.FK_Rent_Customer", "Rent");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Rent>("IAEADatabaseModel.FK_Rent_Customer", "Rent", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="IAEADatabaseModel", Name="Rent")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Rent : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Rent object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="boatID">Initial value of the BoatID property.</param>
        /// <param name="customerID">Initial value of the CustomerID property.</param>
        /// <param name="dateRentStart">Initial value of the DateRentStart property.</param>
        public static Rent CreateRent(global::System.Int32 id, global::System.Int32 boatID, global::System.Int32 customerID, global::System.DateTime dateRentStart)
        {
            Rent rent = new Rent();
            rent.ID = id;
            rent.BoatID = boatID;
            rent.CustomerID = customerID;
            rent.DateRentStart = dateRentStart;
            return rent;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BoatID
        {
            get
            {
                return _BoatID;
            }
            set
            {
                OnBoatIDChanging(value);
                ReportPropertyChanging("BoatID");
                _BoatID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BoatID");
                OnBoatIDChanged();
            }
        }
        private global::System.Int32 _BoatID;
        partial void OnBoatIDChanging(global::System.Int32 value);
        partial void OnBoatIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CustomerID
        {
            get
            {
                return _CustomerID;
            }
            set
            {
                OnCustomerIDChanging(value);
                ReportPropertyChanging("CustomerID");
                _CustomerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CustomerID");
                OnCustomerIDChanged();
            }
        }
        private global::System.Int32 _CustomerID;
        partial void OnCustomerIDChanging(global::System.Int32 value);
        partial void OnCustomerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateRentStart
        {
            get
            {
                return _DateRentStart;
            }
            set
            {
                OnDateRentStartChanging(value);
                ReportPropertyChanging("DateRentStart");
                _DateRentStart = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateRentStart");
                OnDateRentStartChanged();
            }
        }
        private global::System.DateTime _DateRentStart;
        partial void OnDateRentStartChanging(global::System.DateTime value);
        partial void OnDateRentStartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateRentEnd
        {
            get
            {
                return _DateRentEnd;
            }
            set
            {
                OnDateRentEndChanging(value);
                ReportPropertyChanging("DateRentEnd");
                _DateRentEnd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateRentEnd");
                OnDateRentEndChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateRentEnd;
        partial void OnDateRentEndChanging(Nullable<global::System.DateTime> value);
        partial void OnDateRentEndChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IAEADatabaseModel", "FK_Rent_Boat", "Boat")]
        public Boat Boat
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Boat>("IAEADatabaseModel.FK_Rent_Boat", "Boat").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Boat>("IAEADatabaseModel.FK_Rent_Boat", "Boat").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Boat> BoatReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Boat>("IAEADatabaseModel.FK_Rent_Boat", "Boat");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Boat>("IAEADatabaseModel.FK_Rent_Boat", "Boat", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IAEADatabaseModel", "FK_Rent_Customer", "Customer")]
        public Customer Customer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("IAEADatabaseModel.FK_Rent_Customer", "Customer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("IAEADatabaseModel.FK_Rent_Customer", "Customer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Customer> CustomerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("IAEADatabaseModel.FK_Rent_Customer", "Customer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Customer>("IAEADatabaseModel.FK_Rent_Customer", "Customer", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
